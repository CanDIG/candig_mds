// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddSampleCreatedCode is the HTTP code returned for type AddSampleCreated
const AddSampleCreatedCode int = 201

/*AddSampleCreated item created

swagger:response addSampleCreated
*/
type AddSampleCreated struct {
}

// NewAddSampleCreated creates AddSampleCreated with default headers values
func NewAddSampleCreated() *AddSampleCreated {
	return &AddSampleCreated{}
}

// WriteResponse to the client
func (o *AddSampleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// AddSampleBadRequestCode is the HTTP code returned for type AddSampleBadRequest
const AddSampleBadRequestCode int = 400

/*AddSampleBadRequest invalid input, object invalid

swagger:response addSampleBadRequest
*/
type AddSampleBadRequest struct {
}

// NewAddSampleBadRequest creates AddSampleBadRequest with default headers values
func NewAddSampleBadRequest() *AddSampleBadRequest {
	return &AddSampleBadRequest{}
}

// WriteResponse to the client
func (o *AddSampleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// AddSampleConflictCode is the HTTP code returned for type AddSampleConflict
const AddSampleConflictCode int = 409

/*AddSampleConflict an existing item already exists

swagger:response addSampleConflict
*/
type AddSampleConflict struct {
}

// NewAddSampleConflict creates AddSampleConflict with default headers values
func NewAddSampleConflict() *AddSampleConflict {
	return &AddSampleConflict{}
}

// WriteResponse to the client
func (o *AddSampleConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
