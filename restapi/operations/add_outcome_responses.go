// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddOutcomeCreatedCode is the HTTP code returned for type AddOutcomeCreated
const AddOutcomeCreatedCode int = 201

/*AddOutcomeCreated item created

swagger:response addOutcomeCreated
*/
type AddOutcomeCreated struct {
}

// NewAddOutcomeCreated creates AddOutcomeCreated with default headers values
func NewAddOutcomeCreated() *AddOutcomeCreated {
	return &AddOutcomeCreated{}
}

// WriteResponse to the client
func (o *AddOutcomeCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// AddOutcomeBadRequestCode is the HTTP code returned for type AddOutcomeBadRequest
const AddOutcomeBadRequestCode int = 400

/*AddOutcomeBadRequest invalid input, object invalid

swagger:response addOutcomeBadRequest
*/
type AddOutcomeBadRequest struct {
}

// NewAddOutcomeBadRequest creates AddOutcomeBadRequest with default headers values
func NewAddOutcomeBadRequest() *AddOutcomeBadRequest {
	return &AddOutcomeBadRequest{}
}

// WriteResponse to the client
func (o *AddOutcomeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// AddOutcomeConflictCode is the HTTP code returned for type AddOutcomeConflict
const AddOutcomeConflictCode int = 409

/*AddOutcomeConflict an existing item already exists

swagger:response addOutcomeConflict
*/
type AddOutcomeConflict struct {
}

// NewAddOutcomeConflict creates AddOutcomeConflict with default headers values
func NewAddOutcomeConflict() *AddOutcomeConflict {
	return &AddOutcomeConflict{}
}

// WriteResponse to the client
func (o *AddOutcomeConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
