// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Tumourboard tumourboard
// swagger:model Tumourboard
type Tumourboard struct {

	// actionable target found
	ActionableTargetFound *string `json:"actionable_target_found,omitempty" db:"actionable_target_found"`

	// agent or drug class
	AgentOrDrugClass *string `json:"agent_or_drug_class,omitempty" db:"agent_or_drug_class"`

	// analyses discussed
	AnalysesDiscussed *string `json:"analyses_discussed,omitempty" db:"analyses_discussed"`

	// classification of variants
	ClassificationOfVariants *string `json:"classification_of_variants,omitempty" db:"classification_of_variants"`

	// clinical validation progress
	ClinicalValidationProgress *string `json:"clinical_validation_progress,omitempty" db:"clinical_validation_progress"`

	// cnvs discussed
	CnvsDiscussed *string `json:"cnvs_discussed,omitempty" db:"cnvs_discussed"`

	// date of molecular tumour board
	DateOfMolecularTumourBoard *string `json:"date_of_molecular_tumour_board,omitempty" db:"date_of_molecular_tumour_board"`

	// details of treatment plan impact
	DetailsOfTreatmentPlanImpact *string `json:"details_of_treatment_plan_impact,omitempty" db:"details_of_treatment_plan_impact"`

	// did treatment plan change based on profiling result
	DidTreatmentPlanChangeBasedOnProfilingResult *string `json:"did_treatment_plan_change_based_on_profiling_result,omitempty" db:"did_treatment_plan_change_based_on_profiling_result"`

	// disease expression comparator
	DiseaseExpressionComparator *string `json:"disease_expression_comparator,omitempty" db:"disease_expression_comparator"`

	// germline dna sample id
	GermlineDnaSampleID *string `json:"germline_dna_sample_id,omitempty" db:"germline_dna_sample_id"`

	// germline snv discussed
	GermlineSnvDiscussed *string `json:"germline_snv_discussed,omitempty" db:"germline_snv_discussed"`

	// has a germline variant been identified by profiling that may predispose to cancer
	HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer *string `json:"has_a_germline_variant_been_identified_by_profiling_that_may_predispose_to_cancer,omitempty" db:"has_a_germline_variant_been_identified_by_profiling_that_may_predispose_to_cancer"`

	// how treatment has altered based on profiling
	HowTreatmentHasAlteredBasedOnProfiling *string `json:"how_treatment_has_altered_based_on_profiling,omitempty" db:"how_treatment_has_altered_based_on_profiling"`

	// level of evidence for expression target agent match
	LevelOfEvidenceForExpressionTargetAgentMatch *string `json:"level_of_evidence_for_expression_target_agent_match,omitempty" db:"level_of_evidence_for_expression_target_agent_match"`

	// molecular tumour board recommendation
	MolecularTumourBoardRecommendation *string `json:"molecular_tumour_board_recommendation,omitempty" db:"molecular_tumour_board_recommendation"`

	// normal expression comparator
	NormalExpressionComparator *string `json:"normal_expression_comparator,omitempty" db:"normal_expression_comparator"`

	// patient has been referred to a hereditary cancer program based on this molecular profiling
	PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling *string `json:"patient_has_been_referred_to_a_hereditary_cancer_program_based_on_this_molecular_profiling,omitempty" db:"patient_has_been_referred_to_a_hereditary_cancer_program_based_on_this_molecular_profiling"`

	// sample id
	SampleID *string `json:"sample_id,omitempty" db:"sample_id"`

	// patient or family informed of germline variant
	PatientOrFamilyInformedOfGermlineVariant *string `json:"patient_or_family_informed_of_germline_variant,omitempty" db:"patient_or_family_informed_of_germline_variant"`

	// reason treatment plan did not change based on profiling
	ReasonTreatmentPlanDidNotChangeBasedOnProfiling *string `json:"reason_treatment_plan_did_not_change_based_on_profiling,omitempty" db:"reason_treatment_plan_did_not_change_based_on_profiling"`

	// somatic sample type
	SomaticSampleType *string `json:"somatic_sample_type,omitempty" db:"somatic_sample_type"`

	// somatic snv discussed
	SomaticSnvDiscussed *string `json:"somatic_snv_discussed,omitempty" db:"somatic_snv_discussed"`

	// structural variant discussed
	StructuralVariantDiscussed *string `json:"structural_variant_discussed,omitempty" db:"structural_variant_discussed"`

	// summary report
	SummaryReport *string `json:"summary_report,omitempty" db:"summary_report"`

	// tumour dna sample id
	TumourDnaSampleID *string `json:"tumour_dna_sample_id,omitempty" db:"tumour_dna_sample_id"`

	// tumour rna sample id
	TumourRnaSampleID *string `json:"tumour_rna_sample_id,omitempty" db:"tumour_rna_sample_id"`

	// type of sample analyzed
	TypeOfSampleAnalyzed *string `json:"type_of_sample_analyzed,omitempty" db:"type_of_sample_analyzed"`

	// type of tumour sample analyzed
	TypeOfTumourSampleAnalyzed *string `json:"type_of_tumour_sample_analyzed,omitempty" db:"type_of_tumour_sample_analyzed"`

	// type of validation
	TypeOfValidation *string `json:"type_of_validation,omitempty" db:"type_of_validation"`
}

// Validate validates this tumourboard
func (m *Tumourboard) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *Tumourboard) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Tumourboard) UnmarshalBinary(b []byte) error {
	var res Tumourboard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
