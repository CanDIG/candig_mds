// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Outcome outcome
// swagger:model Outcome
type Outcome struct {

	// date of assessment
	DateOfAssessment *string `json:"date_of_assessment,omitempty" db:"date_of_assessment"`

	// disease response or status
	DiseaseResponseOrStatus *string `json:"disease_response_or_status,omitempty" db:"disease_response_or_status"`

	// height
	Height *string `json:"height,omitempty" db:"height"`

	// height units
	HeightUnits *string `json:"height_units,omitempty" db:"height_units"`

	// method of response evaluation
	MethodOfResponseEvaluation *string `json:"method_of_response_evaluation,omitempty" db:"method_of_response_evaluation"`

	// minimal residual disease assessment
	MinimalResidualDiseaseAssessment *string `json:"minimal_residual_disease_assessment,omitempty" db:"minimal_residual_disease_assessment"`

	// other response classification
	OtherResponseClassification *string `json:"other_response_classification,omitempty" db:"other_response_classification"`

	// sample id
	SampleID *string `json:"sample_id,omitempty" db:"sample_id"`

	// performance status
	PerformanceStatus *string `json:"performance_status,omitempty" db:"performance_status"`

	// physical exam id
	PhysicalExamID *string `json:"physical_exam_id,omitempty" db:"physical_exam_id"`

	// response criteria used
	ResponseCriteriaUsed *string `json:"response_criteria_used,omitempty" db:"response_criteria_used"`

	// sites of any progression or recurrence
	SitesOfAnyProgressionOrRecurrence *string `json:"sites_of_any_progression_or_recurrence,omitempty" db:"sites_of_any_progression_or_recurrence"`

	// summary stage
	SummaryStage *string `json:"summary_stage,omitempty" db:"summary_stage"`

	// vital status
	VitalStatus *string `json:"vital_status,omitempty" db:"vital_status"`

	// weight
	Weight *string `json:"weight,omitempty" db:"weight"`

	// weight units
	WeightUnits *string `json:"weight_units,omitempty" db:"weight_units"`
}

// Validate validates this outcome
func (m *Outcome) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *Outcome) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Outcome) UnmarshalBinary(b []byte) error {
	var res Outcome
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
